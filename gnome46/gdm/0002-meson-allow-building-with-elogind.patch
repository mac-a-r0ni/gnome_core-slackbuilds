diff -Naur gdm-44.rc.orig/common/meson.build gdm-44.rc/common/meson.build
--- gdm-44.rc.orig/common/meson.build	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/common/meson.build	2023-03-05 14:45:49.612794868 -0600
@@ -11,7 +11,7 @@
 )
 
 libgdmcommon_deps = [
-  libsystemd_dep,
+  logind_dep,
   gobject_dep,
   gio_dep,
   gio_unix_dep,
diff -Naur gdm-44.rc.orig/data/meson.build gdm-44.rc/data/meson.build
--- gdm-44.rc.orig/data/meson.build	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/data/meson.build	2023-03-05 14:45:49.612794868 -0600
@@ -164,41 +164,53 @@
   service_config.set('PLYMOUTH_QUIT_SERVICE', '')
 endif
 
-if get_option('systemdsystemunitdir') != ''
-  systemd_systemunitdir = get_option('systemdsystemunitdir')
-else
-  systemd_systemunitdir = systemd_dep.get_pkgconfig_variable('systemdsystemunitdir')
+systemdsystemunitdir = get_option('systemdsystemunitdir')
+if systemdsystemunitdir != 'no'
+  assert(systemd_dep.found(), 'systemd required but not found, please provide a valid systemd system unit dir or disable it')
+  if get_option('systemdsystemunitdir') != ''
+    systemd_systemunitdir = get_option('systemdsystemunitdir')
+  else
+    systemd_systemunitdir = systemd_dep.get_pkgconfig_variable('systemdsystemunitdir')
+  endif
 endif
 
-if get_option('systemduserunitdir') != ''
-  systemd_userunitdir = get_option('systemduserunitdir')
-else
-  systemd_userunitdir = systemd_dep.get_pkgconfig_variable('systemduserunitdir',
-                                                           define_variable: ['prefix', get_option('prefix')])
+systemduserunitdir = get_option('systemduserunitdir')
+if systemduserunitdir != 'no'
+  assert(systemd_dep.found(), 'systemd required but not found, please provide a valid systemd user unit dir or disable it')
+  if get_option('systemduserunitdir') != ''
+    systemd_userunitdir = get_option('systemduserunitdir')
+  else
+    systemd_userunitdir = systemd_dep.get_pkgconfig_variable('systemduserunitdir',
+                                                             define_variable: ['prefix', get_option('prefix')])
+  endif
 endif
 
-configure_file(
-  input: 'gdm.service.in',
-  output: '@BASENAME@',
-  configuration: service_config,
-  install_dir: systemd_systemunitdir,
-  format: 'cmake'
-)
+if systemdsystemunitdir != 'no'
+  configure_file(
+    input: 'gdm.service.in',
+    output: '@BASENAME@',
+    configuration: service_config,
+    install_dir: systemd_systemunitdir,
+    format: 'cmake'
+  )
+endif
 
 gdm_gnome_session_wanted_targets = []
 foreach component: gdm_gnome_user_session_wanted_components
   gdm_gnome_session_wanted_targets += 'Wants=@0@.target'.format(component)
 endforeach
 
-configure_file(
-  input: 'session.conf.in',
-  output: 'session.conf',
-  configuration: {
-    'requires_component': gdm_gnome_shell_component,
-    'wants_required_components': '\n'.join(gdm_gnome_session_wanted_targets),
-  },
-  install_dir: systemd_userunitdir / 'gnome-session@gnome-login.target.d',
-)
+if systemduserunitdir != 'no'
+  configure_file(
+    input: 'session.conf.in',
+    output: 'session.conf',
+    configuration: {
+      'requires_component': gdm_gnome_shell_component,
+      'wants_required_components': '\n'.join(gdm_gnome_session_wanted_targets),
+    },
+    install_dir: systemd_userunitdir / 'gnome-session@gnome-login.target.d',
+  )
+endif
 
 # XSession
 if get_option('gdm-xsession')
diff -Naur gdm-44.rc.orig/data/pam-arch/gdm-launch-environment.pam gdm-44.rc/data/pam-arch/gdm-launch-environment.pam
--- gdm-44.rc.orig/data/pam-arch/gdm-launch-environment.pam	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/data/pam-arch/gdm-launch-environment.pam	2023-03-05 14:47:12.652756725 -0600
@@ -13,5 +13,5 @@
 session    optional                    pam_keyinit.so       force revoke
 session    required                    pam_succeed_if.so    audit quiet_success user in gdm:gnome-initial-setup
 session    optional                    pam_permit.so
--session   optional                    pam_systemd.so
+-session   optional                    pam_elogind.so
 session    required                    pam_env.so
diff -Naur gdm-44.rc.orig/libgdm/meson.build gdm-44.rc/libgdm/meson.build
--- gdm-44.rc.orig/libgdm/meson.build	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/libgdm/meson.build	2023-03-05 14:45:49.612794868 -0600
@@ -56,7 +56,7 @@
   glib_dep,
   gio_dep,
   gio_unix_dep,
-  libsystemd_dep,
+  logind_dep,
   libgdmcommon_dep,
 ]
 
diff -Naur gdm-44.rc.orig/meson.build gdm-44.rc/meson.build
--- gdm-44.rc.orig/meson.build	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/meson.build	2023-03-05 14:58:31.181273951 -0600
@@ -99,17 +99,30 @@
 if xdmcp_dep.found() and get_option('tcp-wrappers')
   libwrap_dep = cc.find_library('wrap')
 endif
-# systemd
-systemd_dep = dependency('systemd')
-libsystemd_dep = dependency('libsystemd')
-systemd_multiseat_x = find_program('systemd-multi-seat-x',
-  required: false,
-  dirs: [
-    systemd_dep.get_pkgconfig_variable('systemdutildir'),
-    '/lib/systemd',
-    '/usr/lib/systemd',
-  ])
-systemd_x_server = systemd_multiseat_x.found()? systemd_multiseat_x.path() : '/lib/systemd/systemd-multi-seat-x'
+
+logind_provider = get_option('logind-provider')
+systemd_dep = dependency('systemd', required: false)
+if logind_provider == 'systemd'
+  libsystemd_dep = dependency('libsystemd')
+  logind_dep = libsystemd_dep
+  if meson.version().version_compare('>= 0.53')
+    systemd_multiseat_x = find_program('systemd-multi-seat-x',
+      required: false,
+      dirs: [
+        systemd_dep.get_pkgconfig_variable('systemdutildir'),
+        '/lib/systemd',
+        '/usr/lib/systemd',
+      ])
+ else
+    systemd_multiseat_x = find_program('systemd-multi-seat-x', required: false)
+ endif
+  systemd_x_server = systemd_multiseat_x.found()? systemd_multiseat_x.path() : '/lib/systemd/systemd-multi-seat-x'
+ else
+  elogind_dep = dependency('libelogind')
+  logind_dep = elogind_dep
+  systemd_x_server = 'disabled'
+ endif
+
 # Plymouth
 plymouth_dep = dependency('ply-boot-client', required: get_option('plymouth'))
 # Check for Solaris auditing API (ADT)
@@ -319,6 +332,7 @@
     'PAM Syslog': have_pam_syslog,
     'Supports PAM Extensions': pam_extensions_supported,
     'SeLinux': libselinux_dep.found(),
+    'Logind Provider': get_option('logind-provider'),
     'Use GDM Xsession': get_option('gdm-xsession'),
     'Use UserDisplayServer': get_option('user-display-server'),
     'Use SystemdJournal': get_option('systemd-journal'),
diff -Naur gdm-44.rc.orig/meson_options.txt gdm-44.rc/meson_options.txt
--- gdm-44.rc.orig/meson_options.txt	2023-03-05 08:41:13.000000000 -0600
+++ gdm-44.rc/meson_options.txt	2023-03-05 14:45:49.613794855 -0600
@@ -12,6 +12,7 @@
 option('ipv6', type: 'boolean', value: false, description: 'Enables compilation of IPv6 code.')
 option('lang-file', type: 'string', value: '', description: 'File containing default language settings.')
 option('libaudit', type: 'feature', value: 'auto', description: 'Add Linux audit support.')
+option('logind-provider', type: 'combo', choices: ['systemd', 'elogind'], value: 'systemd', description: 'Which logind library to use.')
 option('log-dir', type: 'string', value: '/var/log/gdm', description: 'Log directory.')
 option('pam-mod-dir', type: 'string', value: '', description: 'Directory to install PAM modules in.')
 option('pam-prefix', type: 'string', value: '', description: 'Specify where PAM files go.')
@@ -27,8 +28,8 @@
 option('split-authentication', type: 'boolean', value: true, description: 'Enable multiple simultaneous PAM conversations during login.')
 option('sysconfsubdir', type: 'string', value: 'gdm', description: 'Directory name used under sysconfdir.')
 option('systemd-journal', type: 'boolean', value: true, description: 'Use journald support.')
-option('systemdsystemunitdir', type: 'string', value: '', description: 'Directory for systemd service files.')
-option('systemduserunitdir', type: 'string', value: '', description: 'Directory for systemd user service files.')
+option('systemdsystemunitdir', type: 'string', value: '', description: 'Directory for systemd service files, or \'no\' to disable.')
+option('systemduserunitdir', type: 'string', value: '', description: 'Directory for systemd user service files, or \'no\' to disable.')
 option('tcp-wrappers', type: 'boolean', value: false, description: 'Use TCP wrappers.')
 option('udev-dir', type: 'string', value: '', description: 'Directory for udev rules file.')
 option('user', type: 'string', value: 'gdm', description: 'GDM\'s username.')
